# Compiler
CXX = g++

# Compiler flags
CXXFLAGS = -std=c++14 -Wall -Wextra -g

# Linker flags (add libraries if needed)
LDFLAGS = 

# Source files
SRCS = IOLoop.cpp SerialPortClient.cpp SerialPortUploader.cpp Upload.m.cpp W2Uploader.cpp

# Object files (generated by compiling SRCS, placed under bin)
OBJS = $(SRCS:%.cpp=$(OUT_DIR)/%.o)

# Output directory for object files and executable
OUT_DIR = bin

# Executable file
EXEC = $(OUT_DIR)/uploader

# Default target
all: $(EXEC)

# Rule to build the executable
$(EXEC): $(OBJS)
	@mkdir -p $(OUT_DIR)
	$(CXX) $(OBJS) -o $(EXEC) $(LDFLAGS)

# Rule to compile .cpp to .o, placing .o files in $(OUT_DIR)
$(OUT_DIR)/%.o: %.cpp
	@mkdir -p $(OUT_DIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Clean up object files and the executable
clean:
	rm -rf $(OUT_DIR)

# Debugging rule (just builds with debug flags)
debug: CXXFLAGS += -DDEBUG
debug: clean all

# Install rule (optional)
install: $(EXEC)
	# Add install commands here if needed

.PHONY: all clean debug install
